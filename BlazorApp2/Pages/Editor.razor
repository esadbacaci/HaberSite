@page "/admin/habers/edit/{id:int}"
@page "/admin/habers/create"
@using System.IO;
@using Microsoft.AspNetCore.Components.Forms
@inherits OwningComponentBase<IHaberRepository>

<style>
    div.validation-message { color: rgb(220, 53, 69); font-weight: 500 }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Report</h3>
<EditForm Model="Haber" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if(Haber.HaberId!= 0) {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Haber.HaberId" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Haber.HaberTitle)" />
        <InputText class="form-control" @bind-Value="Haber.HaberTitle" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => Haber.HaberDescription)" />
        <InputText class="form-control" @bind-Value="Haber.HaberDescription" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => Haber.HaberCategory)" />
        <InputText class="form-control" @bind-Value="Haber.HaberCategory" />
    </div>
    <div class="form-group">
        <label>Author</label>
        <ValidationMessage For="@(() => Haber.HaberAuthor)" />
        <InputText class="form-control" @bind-Value="Haber.HaberAuthor" />
    </div>
    
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/habers">Cancel</NavLink>
</EditForm>

@code {

    public IHaberRepository Repository => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public int Id { get; set; } = 0;

    public Haber Haber { get; set; } = new Haber();

   

    protected override void OnParametersSet() {
        if (Id != 0) {
            Haber = Repository.Habers.FirstOrDefault(p => p.HaberId == Id);
            
        }
    }

    public void SaveProduct() {
        



        if (Id == 0) {
            Repository.CreateHaber(Haber);
        } else {
            Repository.SaveHaber(Haber);
        }
        NavManager.NavigateTo("/admin/habers");
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}
